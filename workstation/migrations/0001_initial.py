# Generated by Django 3.2.5 on 2021-08-04 05:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import utils.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BladeApply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_num', models.IntegerField(blank=True, null=True, verbose_name='圈数')),
                ('pressure', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='压力')),
                ('repair_order_num', models.IntegerField(blank=True, null=True, verbose_name='维修单号')),
                ('order_status', models.IntegerField(blank=True, null=True, verbose_name='订单状态')),
                ('order_comments', models.CharField(blank=True, max_length=255, null=True, verbose_name='订单备注')),
                ('receive_time', models.DateTimeField(blank=True, null=True, verbose_name='领用时间')),
                ('complete_time', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'blade_apply',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='公司')),
                ('abbreviation', models.CharField(blank=True, max_length=64, null=True, verbose_name='公司简写')),
                ('introduction', models.CharField(blank=True, max_length=255, null=True, verbose_name='公司介绍')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='Consuming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consuming_num', models.IntegerField(blank=True, null=True, verbose_name='数量')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('receive_time', models.DateTimeField(blank=True, null=True, verbose_name='领用时间')),
                ('complete_time', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'consuming',
            },
        ),
        migrations.CreateModel(
            name='DevicesType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_1', models.CharField(blank=True, max_length=32, null=True, verbose_name='设备参数1')),
                ('parameter_2', models.CharField(blank=True, max_length=32, null=True, verbose_name='设备参数2')),
                ('parameter_3', models.CharField(blank=True, max_length=32, null=True, verbose_name='设备参数3')),
                ('parameter_4', models.CharField(blank=True, max_length=32, null=True, verbose_name='设备参数4')),
                ('parameter_5', models.CharField(blank=True, max_length=32, null=True, verbose_name='设备参数5')),
                ('device_info', models.TextField(blank=True, max_length=1024, null=True, verbose_name='设备简介')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'devicestype',
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=64, verbose_name='文件名')),
                ('myfile', models.FileField(blank=True, null=True, upload_to=utils.utils.FilePath, verbose_name='文件路径')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'files',
            },
        ),
        migrations.CreateModel(
            name='FunctionOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_name', models.CharField(max_length=64)),
                ('operation_code', models.CharField(blank=True, max_length=64, null=True)),
                ('url_prefix', models.CharField(blank=True, max_length=64, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'function_operation',
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_name', models.CharField(max_length=64, verbose_name='图片名')),
                ('img', models.FileField(blank=True, null=True, upload_to=utils.utils.FilePath, verbose_name='图片')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'Images',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_model', models.CharField(blank=True, max_length=32, null=True, verbose_name='车型')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('maintenance_record', models.TextField(blank=True, null=True, verbose_name='维修记录')),
                ('experience_summary', models.TextField(blank=True, null=True, verbose_name='经验总结')),
                ('order_comments', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'maintenance_records',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_name', models.CharField(max_length=32)),
                ('menu_url', models.CharField(blank=True, db_column='menu_URL', max_length=64, null=True)),
                ('f_menu_id', models.IntegerField(blank=True, null=True, verbose_name='父菜单id')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'menu',
            },
        ),
        migrations.CreateModel(
            name='MyLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=64, null=True, verbose_name='部门')),
                ('location_level_1', models.CharField(blank=True, max_length=32, null=True, verbose_name='一级地点')),
                ('location_level_2', models.CharField(blank=True, max_length=32, null=True, verbose_name='二级地点')),
                ('location_level_3', models.CharField(blank=True, max_length=32, null=True, verbose_name='三级地点')),
                ('location_level_4', models.CharField(blank=True, max_length=32, null=True, verbose_name='四级地点')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'mylocation',
            },
        ),
        migrations.CreateModel(
            name='MyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log', models.CharField(max_length=255)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'log',
            },
        ),
        migrations.CreateModel(
            name='MySort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='分类名')),
                ('f_type_id', models.IntegerField(blank=True, null=True, verbose_name='父分类')),
                ('type_layer', models.TextField(blank=True, null=True, verbose_name='层级')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'sort',
            },
        ),
        migrations.CreateModel(
            name='MyTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='标签名')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_stock', models.IntegerField(blank=True, null=True, verbose_name='库存')),
                ('part_inorder', models.IntegerField(blank=True, null=True, verbose_name='上单')),
                ('part_ontheway', models.IntegerField(blank=True, null=True, verbose_name='在途')),
                ('arrival_date', models.DateField(blank=True, null=True, verbose_name='交货期')),
                ('order_status', models.IntegerField(blank=True, null=True, verbose_name='订单状态')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='PageElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_code', models.CharField(max_length=64)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'page_element',
            },
        ),
        migrations.CreateModel(
            name='Parts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_num', models.CharField(blank=True, max_length=12, null=True, verbose_name='物料号')),
                ('my_spec', models.CharField(blank=True, max_length=255, null=True, verbose_name='M型号')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='价格')),
                ('order_num', models.CharField(blank=True, max_length=255, null=True, verbose_name='订货号')),
                ('setech_spec', models.CharField(blank=True, max_length=255, null=True, verbose_name='西泰克规格')),
                ('cordon', models.IntegerField(blank=True, null=True, verbose_name='警戒线')),
                ('min_line', models.IntegerField(blank=True, null=True, verbose_name='底线')),
                ('unit', models.CharField(blank=True, max_length=16, null=True, verbose_name='单位')),
                ('mark', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('usefor', models.IntegerField(blank=True, null=True, verbose_name='用途')),
                ('f_part_id', models.IntegerField(blank=True, null=True, verbose_name='父备件id')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'parts',
            },
        ),
        migrations.CreateModel(
            name='PermissionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_type', models.CharField(max_length=64)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'permission_type',
            },
        ),
        migrations.CreateModel(
            name='WeldingGun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weldinggun_num', models.CharField(blank=True, max_length=64, null=True, verbose_name='焊枪编号')),
                ('weldinggun_serial', models.CharField(blank=True, max_length=32, null=True, verbose_name='焊枪序列号')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='投入运行时间')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('is_inuse', models.BooleanField(default=True, verbose_name='是否在用')),
                ('project', models.CharField(blank=True, max_length=64, null=True, verbose_name='项目')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mylocation', verbose_name='地点')),
                ('log', models.ManyToManyField(blank=True, to='workstation.MyLog')),
                ('tag', models.ManyToManyField(blank=True, to='workstation.MyTag')),
                ('tcp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workstation.images', verbose_name='焊枪Tcp')),
                ('technology', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mysort', verbose_name='焊枪工艺')),
                ('weldinggun_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.devicestype', verbose_name='焊枪型号')),
            ],
            options={
                'db_table': 'weldinggun',
            },
        ),
        migrations.CreateModel(
            name='WeldingGunDamage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('damage_part', models.CharField(blank=True, max_length=255, null=True, verbose_name='损坏部件')),
                ('reason', models.IntegerField(blank=True, null=True, verbose_name='故障原因')),
                ('to_replace', models.CharField(blank=True, max_length=32, null=True, verbose_name='待换备件')),
                ('order_status', models.IntegerField(blank=True, null=True, verbose_name='订单状态')),
                ('order_comments', models.CharField(blank=True, max_length=255, null=True, verbose_name='订单备注')),
                ('is_complete', models.BooleanField(default=False, verbose_name='是否完成')),
                ('complete_time', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='weldinggundamage_applicant_myuser', to=settings.AUTH_USER_MODEL, verbose_name='申请人')),
                ('confirmer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='weldinggundamage_confirmer_myuser', to=settings.AUTH_USER_MODEL, verbose_name='确认人')),
                ('weldinggun', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.weldinggun', verbose_name='焊枪')),
            ],
            options={
                'db_table': 'weldinggun_damage',
            },
        ),
        migrations.CreateModel(
            name='WeldingGunClothes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_replace', models.CharField(blank=True, max_length=255, null=True, verbose_name='更换原因')),
                ('is_replace', models.BooleanField(default=False, verbose_name='是否更换')),
                ('order_status', models.IntegerField(blank=True, null=True, verbose_name='订单状态')),
                ('order_comments', models.CharField(blank=True, max_length=255, null=True, verbose_name='订单备注')),
                ('receive_time', models.DateTimeField(blank=True, null=True, verbose_name='领用时间')),
                ('complete_time', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='weldinggunclothes_applicant_myuser', to=settings.AUTH_USER_MODEL, verbose_name='申请人')),
                ('replacer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='weldinggunclothes_replacer_myuser', to=settings.AUTH_USER_MODEL, verbose_name='更换人')),
                ('weldinggun', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.weldinggun', verbose_name='焊枪')),
            ],
            options={
                'db_table': 'weldinggun_clothes',
            },
        ),
        migrations.CreateModel(
            name='TipDresser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipdresser_num', models.CharField(blank=True, max_length=64, null=True, verbose_name='修磨器编号')),
                ('tipdresser_serial', models.CharField(blank=True, max_length=32, null=True, verbose_name='修磨器序列号')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='投入运行时间')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('is_inuse', models.BooleanField(default=True, verbose_name='是否在用')),
                ('project', models.CharField(blank=True, max_length=64, null=True, verbose_name='项目')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mylocation', verbose_name='地点')),
                ('log', models.ManyToManyField(blank=True, to='workstation.MyLog')),
                ('tag', models.ManyToManyField(blank=True, to='workstation.MyTag')),
                ('tipdresser_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.devicestype', verbose_name='修磨器型号')),
            ],
            options={
                'db_table': 'tipdresser',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant', models.CharField(blank=True, max_length=64, null=True, verbose_name='申请人（char)')),
                ('part_stock', models.IntegerField(blank=True, null=True, verbose_name='库存')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mylocation', verbose_name='位置')),
                ('part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.parts', verbose_name='备件')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='人员')),
            ],
            options={
                'db_table': 'stock',
            },
        ),
        migrations.CreateModel(
            name='RobotE7',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('robotE7_num', models.CharField(blank=True, max_length=64, null=True, verbose_name='机器人编号')),
                ('robotE7_serial', models.CharField(blank=True, max_length=32, null=True, verbose_name='机器人序列号')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='投入运行时间')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('is_inuse', models.BooleanField(default=True, verbose_name='是否在用')),
                ('project', models.CharField(blank=True, max_length=64, null=True, verbose_name='项目')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mylocation', verbose_name='地点')),
                ('log', models.ManyToManyField(blank=True, to='workstation.MyLog')),
                ('robotE7_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.devicestype', verbose_name='7轴型号')),
                ('tag', models.ManyToManyField(blank=True, to='workstation.MyTag')),
            ],
            options={
                'db_table': 'robotE7',
            },
        ),
        migrations.CreateModel(
            name='Robot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('robot_num', models.CharField(blank=True, max_length=64, null=True, verbose_name='机器人编号')),
                ('robot_serial', models.CharField(blank=True, max_length=32, null=True, verbose_name='机器人序列号')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='投入运行时间')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('is_inuse', models.BooleanField(default=True, verbose_name='是否在用')),
                ('project', models.CharField(blank=True, max_length=64, null=True, verbose_name='项目')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mylocation', verbose_name='地点')),
                ('log', models.ManyToManyField(blank=True, to='workstation.MyLog')),
                ('robot_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.devicestype', verbose_name='机器人型号')),
                ('tag', models.ManyToManyField(blank=True, to='workstation.MyTag')),
                ('technology', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mysort', verbose_name='机器人工艺')),
            ],
            options={
                'db_table': 'robot',
            },
        ),
        migrations.AddIndex(
            model_name='permissiontype',
            index=models.Index(fields=['permission_type'], name='permission__permiss_c69a66_idx'),
        ),
        migrations.AddField(
            model_name='parts',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='brand_company', to='workstation.company', verbose_name='品牌'),
        ),
        migrations.AddField(
            model_name='parts',
            name='device_type',
            field=models.ManyToManyField(blank=True, to='workstation.DevicesType', verbose_name='所属设备'),
        ),
        migrations.AddField(
            model_name='parts',
            name='log',
            field=models.ManyToManyField(blank=True, to='workstation.MyLog'),
        ),
        migrations.AddField(
            model_name='parts',
            name='part_file',
            field=models.ManyToManyField(blank=True, to='workstation.Images', verbose_name='备件图'),
        ),
        migrations.AddField(
            model_name='parts',
            name='sort',
            field=models.ManyToManyField(blank=True, to='workstation.MySort', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='parts',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='supplier_company', to='workstation.company', verbose_name='供应商'),
        ),
        migrations.AddField(
            model_name='parts',
            name='tag',
            field=models.ManyToManyField(blank=True, to='workstation.MyTag'),
        ),
        migrations.AddField(
            model_name='pageelement',
            name='permission',
            field=models.ManyToManyField(blank=True, to='workstation.PermissionType', verbose_name='权限'),
        ),
        migrations.AddField(
            model_name='orders',
            name='part',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.parts', verbose_name='备件'),
        ),
        migrations.AddField(
            model_name='orders',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='人员'),
        ),
        migrations.AddIndex(
            model_name='mytag',
            index=models.Index(fields=['tag_name'], name='tag_tag_nam_ab766a_idx'),
        ),
        migrations.AddField(
            model_name='mylog',
            name='sort',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mysort', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='mylocation',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.company', verbose_name='公司'),
        ),
        migrations.AddField(
            model_name='mylocation',
            name='sort',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mysort', verbose_name='地点类型'),
        ),
        migrations.AddField(
            model_name='menu',
            name='permission',
            field=models.ManyToManyField(blank=True, to='workstation.PermissionType', verbose_name='权限'),
        ),
        migrations.AddField(
            model_name='maintenancerecords',
            name='applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='maintenancerecords_applicant_myuser', to=settings.AUTH_USER_MODEL, verbose_name='上传人'),
        ),
        migrations.AddField(
            model_name='maintenancerecords',
            name='inductor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='maintenancerecords_inductor_myuser', to=settings.AUTH_USER_MODEL, verbose_name='归纳人'),
        ),
        migrations.AddField(
            model_name='maintenancerecords',
            name='maintenance_worker',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='maintenancerecords',
            name='rob',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.robot', verbose_name='机器人'),
        ),
        migrations.AddField(
            model_name='images',
            name='permission',
            field=models.ManyToManyField(blank=True, to='workstation.PermissionType', verbose_name='权限'),
        ),
        migrations.AddField(
            model_name='images',
            name='sort',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mysort', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='functionoperation',
            name='permission',
            field=models.ManyToManyField(blank=True, to='workstation.PermissionType', verbose_name='权限'),
        ),
        migrations.AddField(
            model_name='files',
            name='permission',
            field=models.ManyToManyField(blank=True, to='workstation.PermissionType', verbose_name='权限'),
        ),
        migrations.AddField(
            model_name='files',
            name='sort',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mysort', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='devicestype',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.company', verbose_name='品牌'),
        ),
        migrations.AddField(
            model_name='devicestype',
            name='device_sort',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.mysort', verbose_name='设备分类'),
        ),
        migrations.AddField(
            model_name='devicestype',
            name='material',
            field=models.ManyToManyField(blank=True, to='workstation.Files', verbose_name='设备资料'),
        ),
        migrations.AddField(
            model_name='devicestype',
            name='tag',
            field=models.ManyToManyField(blank=True, to='workstation.MyTag'),
        ),
        migrations.AddField(
            model_name='consuming',
            name='stock_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.stock', verbose_name='备件'),
        ),
        migrations.AddField(
            model_name='consuming',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='人员'),
        ),
        migrations.AddField(
            model_name='company',
            name='icon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.files', verbose_name='图标'),
        ),
        migrations.AddField(
            model_name='bladeapply',
            name='applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='bladetype_applicant_myuser', to=settings.AUTH_USER_MODEL, verbose_name='申请人'),
        ),
        migrations.AddField(
            model_name='bladeapply',
            name='bladetype_apply',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='apply_parts', to='workstation.parts', verbose_name='申请刀片类型'),
        ),
        migrations.AddField(
            model_name='bladeapply',
            name='bladetype_received',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='received_parts', to='workstation.parts', verbose_name='领用刀片类型'),
        ),
        migrations.AddField(
            model_name='bladeapply',
            name='oldblade_img',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oldblade_imgs', to='workstation.images', verbose_name='在用刀片图'),
        ),
        migrations.AddField(
            model_name='bladeapply',
            name='polestatus_img',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polestatus_imgs', to='workstation.images', verbose_name='电极帽状态'),
        ),
        migrations.AddField(
            model_name='bladeapply',
            name='receiver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='bladetype_receiver_myuser', to=settings.AUTH_USER_MODEL, verbose_name='领用人'),
        ),
        migrations.AddField(
            model_name='bladeapply',
            name='repair_order_img',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='repairorder_imgs', to='workstation.images', verbose_name='维修单图'),
        ),
        migrations.AddField(
            model_name='bladeapply',
            name='weldinggun',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='workstation.weldinggun', verbose_name='焊枪'),
        ),
        migrations.AddIndex(
            model_name='weldinggun',
            index=models.Index(fields=['weldinggun_num'], name='weldinggun_welding_81911b_idx'),
        ),
        migrations.AddIndex(
            model_name='tipdresser',
            index=models.Index(fields=['tipdresser_num'], name='tipdresser_tipdres_e46ae5_idx'),
        ),
        migrations.AddIndex(
            model_name='robot',
            index=models.Index(fields=['robot_num'], name='robot_robot_n_b51ed5_idx'),
        ),
        migrations.AddIndex(
            model_name='parts',
            index=models.Index(fields=['part_num'], name='parts_part_nu_ce8bf6_idx'),
        ),
        migrations.AlterIndexTogether(
            name='parts',
            index_together={('my_spec', 'setech_spec')},
        ),
        migrations.AddIndex(
            model_name='mylog',
            index=models.Index(fields=['log'], name='log_log_396d20_idx'),
        ),
        migrations.AddIndex(
            model_name='mylocation',
            index=models.Index(fields=['location_level_4'], name='mylocation_locatio_08fe9e_idx'),
        ),
        migrations.AddIndex(
            model_name='devicestype',
            index=models.Index(fields=['parameter_1'], name='devicestype_paramet_978671_idx'),
        ),
        migrations.AlterIndexTogether(
            name='company',
            index_together={('company_name', 'abbreviation')},
        ),
    ]
